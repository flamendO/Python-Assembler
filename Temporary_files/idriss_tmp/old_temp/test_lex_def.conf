# Lexems as simple regexps ( first match gives lexem type !)

blank [ \t]+
newline \n+
comment \#^\ n*

colon :
semicolon ;

# Place keywords before identifiers !
keyword :: if if
keyword :: else else
identifier [a-zA -Z_ ][a-zA -Z_0 -9]*

# Numbers
# Match floats by longest regexp first !
number :: float [0 -9]+\.?[0 -9]*[ eE ][ -\+]?[0 -9]+
number :: float [0 -9]+\.[0 -9]*
number :: uint [0 -9]+